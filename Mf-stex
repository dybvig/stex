# Mf-stex expects to be included in a make file that defines:
#  Scheme   the path of the Chez Scheme executable
#  STEXLIB  the path to the stex library (the library containing this file)

m := $(shell echo '(machine-type)' | $(Scheme) -q)
ifeq ("$m","")
  $(error cannot determine machine-type for Scheme=$(Scheme))
endif

TEXINPUTS:=.:$(realpath $(STEXLIB)/inputs):
export TEXINPUTS

ifeq ($(wildcard $(STEXLIB)/$m/scheme-prep),)
  Sprep = $(Scheme) --libdirs "$(STEXLIB)/src" --program $(STEXLIB)/src/scheme-prep.ss
else
  Sprep = $(STEXLIB)/$m/scheme-prep
endif

ifeq ($(wildcard $(STEXLIB)/$m/html-prep),)
  Hprep = $(Scheme) --libdirs "$(STEXLIB)/src" --program $(STEXLIB)/src/html-prep.ss
else
  Hprep = $(STEXLIB)/$m/html-prep
endif

ifeq ($(wildcard $(STEXLIB)/$m/fixbibtex),)
  fixbibtex = $(Scheme) --libdirs "$(STEXLIB)/src" --program $(STEXLIB)/src/fixbibtex.ss
else
  fixbibtex = $(STEXLIB)/$m/fixbibtex
endif

ifeq ($(origin KATEX), undefined)
KATEX:=$(if $(shell command -v katex),katex,)
endif
ifneq ($(strip $(KATEX)),)
  ifeq ($(strip $(KATEX_CSS)),)
    # try to infer KATEX_CSS
    katexrealpath:=$(realpath $(shell command -v $(KATEX)))
    katexrealdir:=$(dir $(katexrealpath))
    ifeq ($(katexrealpath),)
      # can't infer; complain below
    else ifneq ($(realpath $(katexrealdir)/dist/katex.css),)
      # NPM installation layout (also release tarballs)
      KATEX_CSS=$(katexrealdir)/dist/katex.css
    else ifneq ($(realpath $(katexrealdir)/katex.css),)
      # Debian installation layout
      KATEX_CSS=$(katexrealdir)/katex.css
    endif
    ifeq ($(strip $(KATEX_CSS)),)
      $(error cannot find KATEX_CSS for KATEX=$(KATEX))
    endif
  endif
endif
export KATEX KATEX_FLAGS

mathdir=math/$(x)
mathfiles=$(mathdir)/mathfiles

# solaris /bin/sh doesn't support '!' in test
SHELL=bash

stexsrc = $(x).stex
texsrc = $(x).tex
spellobj = $(x).spell

.SUFFIXES:
.SUFFIXES: .stex .tex .spell .fig .ps .png .pdf .eps
.stex.tex:
	$(Sprep) $(stexmacrofiles) $*
	chmod -w $*.tex
.tex.spell:
	latexspell $*.tex
.fig.ps:
	fig2dev -Leps $*.fig $*.ps
.fig.png:
	fig2dev -Lppm $*.fig | pnmcrop | pnmtopng -transparent white > $*.png
	chmod go=r $*.png
.ps.png:
	echo | gs -q -dNOPAUSE -dSAFER -sDEVICE=ppmraw -sOutputFile=- -r90x90 $*.ps | pnmcrop | pnmtopng -transparent white > $*.png
# need to generate eps first to compute bounding box
# need --gs on my machine at home or it fails to find bounding box
.ps.eps:
	ps2epsi $*.ps $*.eps
.eps.pdf:
	epstopdf --gs $*.eps
.fig.pdf:
	fig2dev -Leps $*.fig | epstopdf --filter > $*.pdf

ifeq "$(latex)" "latex"
doitformebaby: $(x).ps $(x).html

$(x).ps: $(x).thirdrun
	dvips -o $(x).ps $(x).dvi

$(x).pdf: $(x).ps
	ps2pdf $*.ps $*.pdf
	chmod 644 $*.pdf
else
doitformebaby: $(x).pdf $(x).html

$(x).pdf: $(x).thirdrun
	chmod 644 $(x).pdf
endif

$(x).dvi: $(x).thirdrun

$(x).thirdrun: $(x).secondrun
ifdef index
	makeindex $(x)
endif
	$(latex) $(x)
	touch $(x).thirdrun

$(x).secondrun: $(x).firstrun $(bib)
ifneq ($(strip $(bib)),)
	bibtex $(x)
	$(fixbibtex) $(x).bbl
endif
ifdef index
	makeindex $(x)
endif
	$(latex) $(x)
	touch $(x).secondrun

$(x).firstrun: $(texsrc)
	touch $(x).htoc
	$(latex) $(x)
	touch $(x).firstrun

all.tex: $(texsrc)

ifeq ($(strip $(KATEX)),)
$(x).html: $(x).mathrun
else
$(x).hfourthrun: $(x).mathrun $(x).katex-css-link
	$(Hprep) --mathdir $(mathdir) --use-katex --katex-finished --katex-css-link-file $(x).katex-css-link $(x)
	chmod 444 *.html
	touch $(x).hfourthrun

# a project may supply one with content to override the default
$(x).katex-css-link:
	touch $(x).katex-css-link

ifeq ($(strip $(KATEX_CSS)),no)
$(x).html: $(x).hfourthrun
else
$(x).html: $(x).hfourthrun katex

katex:
	mkdir -p katex
	cp $(KATEX_CSS) katex/katex.css
	(cd katex; (cd $(dir $(KATEX_CSS)); tar -cf - --dereference fonts) | tar -xpf -)
	chmod u+w katex/katex.css katex/fonts
endif
endif

$(x).mathrun: gifs $(mathfiles)
	@(cd $(mathdir); make)
	touch $(x).mathrun

gifs:
	(cd $(STEXLIB); tar -cf - --dereference gifs) | tar -xpf -
	chmod u+w gifs

math:
	(cd $(STEXLIB); tar -cf - --dereference math) | tar -xpf -
	chmod u+w math

$(mathfiles): $(x).hthirdrun $(figps)
	echo -n gifs= > $(mathfiles)
	(cd $(mathdir); echo *.tex | sed -e "s/\.tex/.gif/g") >> $(mathfiles)
	echo -n htmls= >> $(mathfiles)
	(cd $(mathdir); echo *.katex | sed -e "s/\.katex/.html/g") >> $(mathfiles)

$(x).hthirdrun: $(x).hsecondrun
	$(Hprep) --mathdir $(mathdir) $(if $(strip $(KATEX)),--use-katex,) $(x)
	chmod 444 *.html
	touch $(x).hthirdrun

$(x).hsecondrun: $(x).hfirstrun
	$(Hprep) --mathdir $(mathdir) $(if $(strip $(KATEX)),--use-katex,) $(x)
	chmod 444 *.html
	touch $(x).hsecondrun

$(x).hfirstrun: math $(x).thirdrun
	(if [ ! -e $(mathdir) ] ; then mkdir -p -m u=rwx,g=srx,o=rx $(mathdir); ln -s ../Makefile ../mathmacros ../katexmacros $(mathdir); fi)
	$(Hprep) --mathdir $(mathdir) $(if $(strip $(KATEX)),--use-katex,) $(x)
	touch $(x).hfirstrun

spell: $(spellobj)

$(x).spell: $(x).bbl $(x).tex
	latexspell $(x).bbl
	latexspell $(x).tex

clean: $(x).clean
	-/bin/rm -f *.log *.dvi *.aux *.out *.toc *.tmp *.idx *.ilg *.ind *.blg *.bbl *.rfm *.sfm *.firstrun *.secondrun *.thirdrun
	-/bin/rm -f *.haux *.htoc *.hidx *.hfirstrun *.hsecondrun *.hthirdrun *.mathrun *.hfourthrun
	-/bin/rm -f *.tex

reallyclean: clean $(x).reallyclean
	-/bin/rm -f *.html *.ps *.pdf *.png

reallyreallyclean: reallyclean $(x).reallyreallyclean
	-/bin/rm -rf $(mathdir)
